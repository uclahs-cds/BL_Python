[build-system]

requires = [
    "setuptools>=42",
    "wheel"
]

build-backend = "setuptools.build_meta"


[project]
name = "BL_Python.all"
requires-python = ">=3.10"
authors = [
    {name = 'Aaron Holmes', email = 'aholmes@mednet.ucla.edu'}
]
description = 'Python libraries for use in Boutros Lab.'
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License (GPL)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Natural Language :: English"
]
dependencies = [
    "BL_Python.AWS",
    "BL_Python.database",
    "BL_Python.development",
    "BL_Python.platform",
    "BL_Python.programming",
    "BL_Python.testing",
    "BL_Python.web"
]

dynamic = ["version", "readme"]
[tool.setuptools.dynamic]
version = {attr = "BL_Python.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[project.urls]
"Homepage" = "https://github.com/uclahs-cds/BL_Python"
"Bug Tracker" = "https://github.com/uclahs-cds/BL_Python/issues"
"Repository" = "https://github.com/uclahs-cds/BL_Python.git"
"Changelog" = "https://github.com/uclahs-cds/BL_Python/blob/main/CHANGELOG.md"

[tool.setuptools.package-dir]
"BL_Python" = "src"
"BL_Python.AWS" = "src/AWS/BL_Python/AWS"
"BL_Python.database" = "src/database/BL_Python/database"
"BL_Python.development" = "src/development/BL_Python/development"
"BL_Python.platform" = "src/platform/BL_Python/platform"
"BL_Python.programming" = "src/programming/BL_Python/programming"
"BL_Python.testing" = "src/testing/BL_Python/testing"
"BL_Python.web" = "src/web/BL_Python/web"

[tool.setuptools]
packages = [
    "BL_Python",
    "BL_Python.AWS",
    "BL_Python.database",
    "BL_Python.development",
    "BL_Python.platform",
    "BL_Python.programming",
    "BL_Python.testing",
    "BL_Python.web"
]

#
[project.optional-dependencies]
dev-dependencies = [
    # testing automation. use specific versions so behavior does not change.
    "pytest == 7.4.0",
    "pytest-mock == 3.11.1",
    "mock == 5.1.0",

    # code quality. allow minor version updates.
    # this can possibly change behavior of quality checks,
    # which allows us to catch new types of problems.
    "pyright ~= 1.1",
    "isort ~= 5.12",
    # specific version is nnecessary due to Flask dependency
    # version conflict with `click`
    # flask 1.1.4 depends on click<8.0 and >=5.1
    # black 22.1.0 depends on click>=8.0.0
    "black == 21.12b0"
]

[tool.pyright]
pythonVersion = "3.10"

include = [
    "*.py",
    "src/",
    "test/"
]

exclude = [
    "**/build",
    "**/.venv",
    "**/.pytest_cache",
    ".github",
    ".git",
    "**/typings",
    "**/node_modules",
    "**/__pycache__"
]

extraPaths = [
    "src/AWS",
    "src/database",
    "src/development",
    "src/platform",
    "src/programming",
    "src/testing",
    "src/web"
]

stubPath = "./typings"

useLibraryCodeForTypes = true

typeCheckingMode = "strict"

reportImportCycles = "information"
reportCallInDefaultInitializer = "warning"
reportImplicitOverride = "information"
reportImplicitStringConcatenation = "warning"
reportMissingSuperCall = "information"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "information"
reportUninitializedInstanceVariable = "information"
reportUnnecessaryTypeIgnoreComment = "information"
reportUnusedCallResult = "information"
reportMissingTypeStubs = "information"

[tool.pytest.ini_options]
testpaths = [
    "test",
    "src/AWS/test",
    "src/database/test",
    "src/development/test",
    "src/platform/test",
    "src/programming/test",
    "src/testing/test",
    "src/web/test"
]

addopts = [
    "--import-mode=importlib"
]

python_files = "test_*.py"

norecursedirs = "__pycache__ build .pytest_cache *.egg-info .venv"

[tool.black]
exclude = "src/.+/(typings|build)"

[tool.isort]
profile = "black"
src_paths = ["src"]
skip_glob = ["src/*/typings", "src/*/build"]