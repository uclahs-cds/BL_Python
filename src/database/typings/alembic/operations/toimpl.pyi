"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from . import ops
from .base import Operations
from sqlalchemy.sql.schema import Table

if TYPE_CHECKING:
    ...
@Operations.implementation_for(ops.AlterColumnOp)
def alter_column(operations: Operations, operation: ops.AlterColumnOp) -> None:
    ...

@Operations.implementation_for(ops.DropTableOp)
def drop_table(operations: Operations, operation: ops.DropTableOp) -> None:
    ...

@Operations.implementation_for(ops.DropColumnOp)
def drop_column(operations: Operations, operation: ops.DropColumnOp) -> None:
    ...

@Operations.implementation_for(ops.CreateIndexOp)
def create_index(operations: Operations, operation: ops.CreateIndexOp) -> None:
    ...

@Operations.implementation_for(ops.DropIndexOp)
def drop_index(operations: Operations, operation: ops.DropIndexOp) -> None:
    ...

@Operations.implementation_for(ops.CreateTableOp)
def create_table(operations: Operations, operation: ops.CreateTableOp) -> Table:
    ...

@Operations.implementation_for(ops.RenameTableOp)
def rename_table(operations: Operations, operation: ops.RenameTableOp) -> None:
    ...

@Operations.implementation_for(ops.CreateTableCommentOp)
def create_table_comment(operations: Operations, operation: ops.CreateTableCommentOp) -> None:
    ...

@Operations.implementation_for(ops.DropTableCommentOp)
def drop_table_comment(operations: Operations, operation: ops.DropTableCommentOp) -> None:
    ...

@Operations.implementation_for(ops.AddColumnOp)
def add_column(operations: Operations, operation: ops.AddColumnOp) -> None:
    ...

@Operations.implementation_for(ops.AddConstraintOp)
def create_constraint(operations: Operations, operation: ops.AddConstraintOp) -> None:
    ...

@Operations.implementation_for(ops.DropConstraintOp)
def drop_constraint(operations: Operations, operation: ops.DropConstraintOp) -> None:
    ...

@Operations.implementation_for(ops.BulkInsertOp)
def bulk_insert(operations: Operations, operation: ops.BulkInsertOp) -> None:
    ...

@Operations.implementation_for(ops.ExecuteSQLOp)
def execute_sql(operations: Operations, operation: ops.ExecuteSQLOp) -> None:
    ...

