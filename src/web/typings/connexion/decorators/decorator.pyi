"""
This type stub file was generated by pyright.
"""

"""
This module defines a BaseDecorator to wrap a user view function and a RequestResponseDecorator
which manages the lifecycle of a request internally in Connexion.
"""
logger = ...
class BaseDecorator:
    def __call__(self, function):
        """
        :type function: types.FunctionType
        :rtype: types.FunctionType
        """
        ...
    
    def __repr__(self): # -> Literal['<BaseDecorator>']:
        """
        :rtype: str
        """
        ...
    


class RequestResponseDecorator(BaseDecorator):
    """Manages the lifecycle of the request internally in Connexion.
    Filter the ConnexionRequest instance to return the corresponding
    framework specific object.
    """
    def __init__(self, api, mimetype) -> None:
        ...
    
    def __call__(self, function): # -> _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Coroutine[Any, Any, Unknown | Any]] | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]:
        """
        :type function: types.FunctionType
        :rtype: types.FunctionType
        """
        ...
    


