"""
This type stub file was generated by pyright.
"""

from jsonschema.exceptions import ValidationError
from werkzeug.exceptions import Forbidden, Unauthorized

"""
This module defines Exception classes used by Connexion to generate a proper response.
"""
class ConnexionException(Exception):
    ...


class ProblemException(ConnexionException):
    def __init__(self, status=..., title=..., detail=..., type=..., instance=..., headers=..., ext=...) -> None:
        """
        This exception holds arguments that are going to be passed to the
        `connexion.problem` function to generate a proper response.
        """
        ...
    
    def to_problem(self): # -> ConnexionResponse:
        ...
    


class ResolverError(LookupError):
    def __init__(self, reason=..., exc_info=...) -> None:
        """
        :param reason: Reason why the resolver failed.
        :type reason: str
        :param exc_info: If specified, gives details of the original exception
            as returned by sys.exc_info()
        :type exc_info: tuple | None
        """
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class InvalidSpecification(ConnexionException, ValidationError):
    ...


class NonConformingResponse(ProblemException):
    def __init__(self, reason=..., message=...) -> None:
        """
        :param reason: Reason why the response did not conform to the specification
        :type reason: str
        """
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class AuthenticationProblem(ProblemException):
    def __init__(self, status, title, detail) -> None:
        ...
    


class ResolverProblem(ProblemException):
    def __init__(self, status, title, detail) -> None:
        ...
    


class BadRequestProblem(ProblemException):
    def __init__(self, title=..., detail=...) -> None:
        ...
    


class UnsupportedMediaTypeProblem(ProblemException):
    def __init__(self, title=..., detail=...) -> None:
        ...
    


class NonConformingResponseBody(NonConformingResponse):
    def __init__(self, message, reason=...) -> None:
        ...
    


class NonConformingResponseHeaders(NonConformingResponse):
    def __init__(self, message, reason=...) -> None:
        ...
    


class OAuthProblem(Unauthorized):
    ...


class OAuthResponseProblem(OAuthProblem):
    def __init__(self, token_response, **kwargs) -> None:
        ...
    


class OAuthScopeProblem(Forbidden):
    def __init__(self, token_scopes, required_scopes, **kwargs) -> None:
        ...
    


class ExtraParameterProblem(ProblemException):
    def __init__(self, formdata_parameters, query_parameters, title=..., detail=..., **kwargs) -> None:
        ...
    


