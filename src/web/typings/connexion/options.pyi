"""
This type stub file was generated by pyright.
"""

from typing import Optional
from connexion.decorators.uri_parsing import AbstractURIParser

"""
This module defines a Connexion specific options class to pass to the Connexion App or API.
"""
NO_UI_MSG = ...
logger = ...
class ConnexionOptions:
    """Class holding connexion specific options."""
    def __init__(self, options=..., oas_version=...) -> None:
        ...
    
    def extend(self, new_values: Optional[dict] = ...) -> ConnexionOptions:
        """
        Return a new instance of `ConnexionOptions` using as default the currently
        defined options.
        """
        ...
    
    def as_dict(self): # -> dict[Unknown, Unknown]:
        ...
    
    @property
    def openapi_spec_available(self) -> bool:
        """
        Whether to make available the OpenAPI Specification under
        `openapi_spec_path`.

        Default: True
        """
        ...
    
    @property
    def openapi_console_ui_available(self) -> bool:
        """
        Whether to make the OpenAPI Console UI available under the path
        defined in `openapi_console_ui_path` option.

        Default: True
        """
        ...
    
    @property
    def openapi_spec_path(self) -> str:
        """
        Path to mount the OpenAPI Console UI and make it accessible via a browser.

        Default: /openapi.json for openapi3, otherwise /swagger.json
        """
        ...
    
    @property
    def openapi_console_ui_path(self) -> str:
        """
        Path to mount the OpenAPI Console UI and make it accessible via a browser.

        Default: /ui
        """
        ...
    
    @property
    def openapi_console_ui_from_dir(self) -> str:
        """
        Custom OpenAPI Console UI directory from where Connexion will serve
        the static files.

        Default: Connexion's vendored version of the OpenAPI Console UI.
        """
        ...
    
    @property
    def openapi_console_ui_config(self) -> dict:
        """
        Custom OpenAPI Console UI config.

        Default: None
        """
        ...
    
    @property
    def openapi_console_ui_index_template_variables(self) -> dict:
        """
        Custom variables passed to the OpenAPI Console UI template.

        Default: {}
        """
        ...
    
    @property
    def uri_parser_class(self) -> AbstractURIParser:
        """
        The class to use for parsing URIs into path and query parameters.
        Default: None
        """
        ...
    


def filter_values(dictionary: dict) -> dict:
    """
    Remove `None` value entries in the dictionary.

    :param dictionary:
    :return:
    """
    ...

