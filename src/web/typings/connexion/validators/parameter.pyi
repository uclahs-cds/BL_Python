"""
This type stub file was generated by pyright.
"""

from jsonschema import Draft4Validator

logger = ...
TYPE_MAP = ...
draft4_format_checker = Draft4Validator.FORMAT_CHECKER
class ParameterValidator:
    def __init__(self, parameters, uri_parser, strict_validation=..., security_query_params=...) -> None:
        """
        :param parameters: List of request parameter dictionaries
        :param uri_parser: class to use for uri parsing
        :param strict_validation: Flag indicating if parameters not in spec are allowed
        :param security_query_params: List of query parameter names used for security.
            These parameters will be ignored when checking for extra parameters in case of
            strict validation.
        """
        ...
    
    @staticmethod
    def validate_parameter(parameter_type, value, param, param_name=...): # -> str | None:
        ...
    
    @staticmethod
    def validate_parameter_list(request_params, spec_params): # -> set[Any]:
        ...
    
    def validate_query_parameter_list(self, request, security_params=...): # -> set[Any]:
        ...
    
    def validate_query_parameter(self, param, request): # -> str | None:
        """
        Validate a single query parameter (request.args in Flask)

        :type param: dict
        :rtype: str
        """
        ...
    
    def validate_path_parameter(self, param, request): # -> str | None:
        ...
    
    def validate_header_parameter(self, param, request): # -> str | None:
        ...
    
    def validate_cookie_parameter(self, param, request): # -> str | None:
        ...
    
    def validate(self, scope): # -> None:
        ...
    
    def validate_request(self, request): # -> None:
        ...
    


