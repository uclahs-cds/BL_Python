"""
This type stub file was generated by pyright.
"""

from typing import Any, List, Mapping, Optional, TYPE_CHECKING, Union
from sqlalchemy.sql.elements import quoted_name
from sqlalchemy.sql.schema import ForeignKeyConstraint, Index, UniqueConstraint
from alembic.autogenerate.api import AutogenContext
from alembic.ddl.impl import DefaultImpl

if TYPE_CHECKING:
    ...
log = ...
comparators = ...
_IndexColumnSortingOps: Mapping[str, Any] = ...
class _constraint_sig:
    const: Union[UniqueConstraint, ForeignKeyConstraint, Index]
    def md_name_to_sql_name(self, context: AutogenContext) -> Optional[str]:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    def __hash__(self) -> int:
        ...
    


class _uq_constraint_sig(_constraint_sig):
    is_index = ...
    is_unique = ...
    def __init__(self, const: UniqueConstraint) -> None:
        ...
    
    @property
    def column_names(self) -> List[str]:
        ...
    


class _ix_constraint_sig(_constraint_sig):
    is_index = ...
    def __init__(self, const: Index, impl: DefaultImpl) -> None:
        ...
    
    def md_name_to_sql_name(self, context: AutogenContext) -> Optional[str]:
        ...
    
    @property
    def column_names(self) -> Union[List[quoted_name], List[None]]:
        ...
    


class _fk_constraint_sig(_constraint_sig):
    def __init__(self, const: ForeignKeyConstraint, include_options: bool = ...) -> None:
        ...
    


