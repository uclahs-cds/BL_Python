"""
This type stub file was generated by pyright.
"""

from typing import Any, Literal, Optional, TYPE_CHECKING, Union
from .base import AlterColumn, _ServerDefault
from .impl import DefaultImpl
from sqlalchemy.sql.schema import Constraint
from sqlalchemy.sql.type_api import TypeEngine

if TYPE_CHECKING:
    ...
class MySQLImpl(DefaultImpl):
    __dialect__ = ...
    transactional_ddl = ...
    type_synonyms = ...
    type_arg_extract = ...
    def alter_column(self, table_name: str, column_name: str, nullable: Optional[bool] = ..., server_default: Union[_ServerDefault, Literal[False]] = ..., name: Optional[str] = ..., type_: Optional[TypeEngine] = ..., schema: Optional[str] = ..., existing_type: Optional[TypeEngine] = ..., existing_server_default: Optional[_ServerDefault] = ..., existing_nullable: Optional[bool] = ..., autoincrement: Optional[bool] = ..., existing_autoincrement: Optional[bool] = ..., comment: Optional[Union[str, Literal[False]]] = ..., existing_comment: Optional[str] = ..., **kw: Any) -> None:
        ...
    
    def drop_constraint(self, const: Constraint) -> None:
        ...
    
    def compare_server_default(self, inspector_column, metadata_column, rendered_metadata_default, rendered_inspector_default): # -> bool:
        ...
    
    def correct_for_autogen_constraints(self, conn_unique_constraints, conn_indexes, metadata_unique_constraints, metadata_indexes): # -> None:
        ...
    
    def correct_for_autogen_foreignkeys(self, conn_fks, metadata_fks): # -> None:
        ...
    


class MariaDBImpl(MySQLImpl):
    __dialect__ = ...


class MySQLAlterDefault(AlterColumn):
    def __init__(self, name: str, column_name: str, default: _ServerDefault, schema: Optional[str] = ...) -> None:
        ...
    


class MySQLChangeColumn(AlterColumn):
    def __init__(self, name: str, column_name: str, schema: Optional[str] = ..., newname: Optional[str] = ..., type_: Optional[TypeEngine] = ..., nullable: Optional[bool] = ..., default: Optional[Union[_ServerDefault, Literal[False]]] = ..., autoincrement: Optional[bool] = ..., comment: Optional[Union[str, Literal[False]]] = ...) -> None:
        ...
    


class MySQLModifyColumn(MySQLChangeColumn):
    ...


